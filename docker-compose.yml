version: "3.7"

services:
  publisher:
    restart: on-failure
    build: ./publisher
    ports:
      - 8090:8090
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - aws-setup
    container_name: publisher

  consumer:
    restart: on-failure
    build: ./consumer
    ports:
      - 8095:8095
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - aws-setup
    container_name: consumer

  localstack:
    image: localstack/localstack:2.0.2
    container_name: localstack
    ports:
      - "4566-4597:4566-4597"
    environment:
      SERVICES: sns,sqs
      AWS_DEFAULT_REGION: eu-central-1
      AWS_ACCESS_KEY_ID: ACCESS_KEY
      AWS_SECRET_ACCESS_KEY: SECRET_ACCESS_KEY

  aws-setup:
    image: amazon/aws-cli:2.11.21
    container_name: aws-setup
    environment:
      AWS_DEFAULT_REGION: eu-central-1
      AWS_ACCESS_KEY_ID: ACCESS_KEY
      AWS_SECRET_ACCESS_KEY: SECRET_ACCESS_KEY
    entrypoint: /bin/sh -c
    command: >
      "
        sleep 20
        aws sns create-topic --name delivery --endpoint-url http://localstack:4566
        echo Topic created
        aws sqs create-queue --endpoint-url http://localstack:4566 --queue-name notification
        aws sqs create-queue --endpoint-url http://localstack:4566 --queue-name inventory
        aws sqs create-queue --endpoint-url http://localstack:4566 --queue-name shipment
        echo Queues created
        aws --endpoint-url http://localstack:4566 sns subscribe --topic-arn arn:aws:sns:eu-central-1:000000000000:delivery --protocol sqs --notification-endpoint arn:aws:sqs:eu-central-1:000000000000:notification --attributes '{\"RawMessageDelivery\": \"true\", \"FilterPolicy\": \"{\\\"type\\\": [\\\"NOTIFICATION\\\"]}\"}'
        aws --endpoint-url http://localstack:4566 sns subscribe --topic-arn arn:aws:sns:eu-central-1:000000000000:delivery --protocol sqs --notification-endpoint arn:aws:sqs:eu-central-1:000000000000:inventory --attributes '{\"RawMessageDelivery\": \"true\", \"FilterPolicy\": \"{\\\"type\\\": [\\\"INVENTORY\\\"]}\"}'
        aws --endpoint-url http://localstack:4566 sns subscribe --topic-arn arn:aws:sns:eu-central-1:000000000000:delivery --protocol sqs --notification-endpoint arn:aws:sqs:eu-central-1:000000000000:shipment --attributes '{\"RawMessageDelivery\": \"true\", \"FilterPolicy\": \"{\\\"type\\\": [\\\"SHIPMENT\\\"]}\"}'
        echo Subscribed queues to topic
        echo All done
      "
    depends_on:
      - localstack
